# config.py


import os
from dotenv import load_dotenv
from pymongo import MongoClient
acesso_pdf = ['LUIZ','JCB']
load_dotenv()

OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
TWILIO_AUTH_TOKEN = os.getenv("TWILIO_AUTH_TOKEN")
TWILIO_SID = os.getenv("TWILIO_SID")
IMGBB_API_KEY = os.getenv("IMGBB_API_KEY")
DEBUG = os.getenv("DEBUG", "False").lower() == "true"

GESTAO_Content_Type = 'application/json'
GESTAO_access_token = os.getenv("GESTAO_access_token")
GESTAO_secret_access_token = os.getenv("GESTAO_secret_access_token")
GESTAO_base_url = 'https://api.beteltecnologia.com/'
MONGODB_URI = os.getenv("MONGODB_URI")
cluster = MongoClient(MONGODB_URI, tls=True, tlsAllowInvalidCertificates=True)
db = cluster["Agrofatima"]
db_users = db["users"]
db_lista = db["lista_de_compras"]
db_lista_sinezia = db['lista_de_compras_sinezia']
PROMPT_DOC2 = """Analise o documento fornecido e extraia as seguintes informa√ß√µes de forma estruturada:

ara cada nota fiscal, gere um dicionario python separado com os campos:

{
  "cpf_cnpj": "<CNPJ ou CPF do *EMISSOR*>",
  "valor_produtos": <float>,
  "frete": <float>,
  "outras_despesas": <float>,
  "desconto": <float>,
  "valor_total_nota": <float>,
  "DANFE": "<n√∫mero da nota se houver>",
  "data_emissao": "<yyyy-mm-dd>",
  "pagamentos": [
    {"valor": <float>, "vencimento": "<yyyy-mm-dd>"},
    ...
  ]
}

Regras:
- Todos os valores devem estar no formato num√©rico (float), sem aspas.
- Se houver mais de um pagamento ou fatura, inclua todos no array `pagamentos`.
- Se n√£o houver uma informa√ß√£o, coloque '0'.
- Retorne **apenas o dicionario python**, sem explica√ß√µes, cabe√ßalhos ou coment√°rios.

Se o documento n√£o contiver notas fiscais, retorne uma lista vazia: `[]`.

"""
PROMPT_DOC = """Analise o documento fornecido e extraia as seguintes informa√ß√µes na ordem:
1. Tipo de documento (NF, NFS, BL)
2. CNPJ ou CPF do emissor
3. Valor l√≠quido
4. Valor bruto
5. Data de emiss√£o (DD/MM/AAAA)
6. Data de vencimento (DD/MM/AAAA)
7. N√∫mero DANFE

Se n√£o encontrar algum campo, use "None".

‚ö†Ô∏è A resposta deve ser apenas uma linha, em formato CSV, sem cabe√ßalho, sem coment√°rios, sem aspas, sem colchetes e 
sem qualquer texto adicional. Apenas os dados, separados por v√≠rgulas.
"""
PROMPT_AUDIO_ADD = """A partir do √°udio recebido, extraia os itens agr√≠colas solicitados para compra, no contexto de uma fazenda de produ√ß√£o de caf√©.

Para cada item mencionado, identifique:
- O nome do item (em letras min√∫sculas).
- A quantidade associada (com unidade, se aplic√°vel).

‚ö†Ô∏è Responda com uma lista de dicion√°rios no formato Python, como no exemplo abaixo:

[
  {"item": "adubo", "quantidade": "10 sacos"},
  {"item": "sementes de caf√©", "quantidade": "5 kg"},
  {"item": "herbicida", "quantidade": "2 litros"}
]

‚ö†Ô∏è N√£o adicione explica√ß√µes, nem texto adicional. Apenas a lista."""
PROMPT_AUDIO_REMOVE = """A partir do √°udio recebido, extraia os itens agr√≠colas solicitados para remocao de uma lista, no contexto de uma fazenda de produ√ß√£o de caf√©.

Para cada item mencionado, identifique:
- O nome do item (em letras min√∫sculas).
- A quantidade associada (se aplic√°vel).

‚ö†Ô∏è Responda com uma lista de dicion√°rios no formato Python,tudo em letra minuscula, como no exemplo abaixo:

[
  {"item": "adubo", "quantidade": "10 sacos"},
  {"item": "sementes de caf√©", "quantidade": "5 kg"},
  {"item": "herbicida", "quantidade": "2 litros"}
]

‚ö†Ô∏è N√£o adicione explica√ß√µes, nem texto adicional. Apenas a lista."""
PROMPT_FILTRAGEM = """
Voc√™ √© um assistente de uma empresa agr√≠cola que recebe comandos por √°udio.

Sua tarefa √© identificar qual √© a inten√ß√£o principal do usu√°rio com base no texto transcrito do √°udio. As inten√ß√µes poss√≠veis s√£o:

- "adicionar": se o usu√°rio estiver dizendo o que quer comprar, como produtos, insumos agr√≠colas etc.
- "remover": se o usu√°rio estiver pedindo para retirar ou apagar algum item da lista de compras.
- "limpar": se o usu√°rio estiver pedindo para apagar, limpar, deletar toda a lista. 
- "telefone": se o usu√°rio estiver pedindo o n√∫mero de telefone de um colaborador.
‚ö†Ô∏è Responda com **apenas** uma dessas quatro palavras: adicionar, remover, limpar ou telefone.
"""
PROMPT_TELEFONE = """
A partir da mensagem de voz recebida, extraia o nome completo do colaborador para o qual est√° sendo solicitado o telefone.

üìå Considere que o nome pode ser dito de forma parcial, composta ou com detalhes fon√©ticos, como:
- "com Z"
- "com S"
- "com dois Ls"
- "termina com TH"
- "com H mudo"
- "com C e n√£o com K"
Essas pistas devem ser consideradas para tentar identificar a grafia mais prov√°vel do nome, mesmo que nem todas as letras sejam claramente pronunciadas.

‚ö†Ô∏è Extraia somente o nome mencionado, sem o cargo, nem outros dados.  
‚ö†Ô∏è A resposta deve conter apenas uma lista Python com **cada parte do nome** como strings separadas e **em letras min√∫sculas**, sem pontua√ß√£o.

üìå Exemplo:

Entrada (√°udio):  
"Quero o telefone do Jo√£o V√≠tor com dois t√™s e h no final"

Sa√≠da:
["joao", "vittorh"]

Entrada:  
"Telefone do Julio Cezar, com z e sem acento"

Sa√≠da:
["julio", "cezar"]

‚ö†Ô∏è N√£o adicione explica√ß√µes ou texto adicional. Apenas a lista, no formato exato solicitado.
"""





